% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/crypto_create_account.R
\name{crypto_create_account}
\alias{crypto_create_account}
\title{Create a Hedera account via the CryptoService}
\usage{
crypto_create_account(
  config,
  public_key = NULL,
  initial_balance = NULL,
  alias = NULL,
  key_type = c("ED25519", "ECDSA"),
  memo = NULL,
  auto_renew_period = NULL,
  key_list = NULL,
  wait_for_record = FALSE,
  .transport = NULL
)
}
\arguments{
\item{config}{A configuration list created by \code{\link[=hadeda_config]{hadeda_config()}}.}

\item{public_key}{Public key to register for the account. Some gRPC handlers
can derive a default from the operator configuration, but supplying a key
explicitly is the most portable option.}

\item{initial_balance}{Optional initial balance in tinybars.}

\item{alias}{Optional alias string for the new account.}

\item{key_type}{The key type to generate. Either "ED25519" or "ECDSA".}

\item{memo}{Optional memo associated with the account.}

\item{auto_renew_period}{Optional auto-renew period expressed in seconds.}

\item{key_list}{Optional list describing a threshold or key list structure
recognised by the underlying gRPC handler.}

\item{wait_for_record}{Logical indicating whether the gRPC handler should
wait for a transaction record in addition to the receipt acknowledgement.}

\item{.transport}{Optional transport override ("rest" or "grpc").}
}
\value{
A tibble containing the new account identifier alongside transaction
metadata.
}
\description{
Submit a CryptoService account creation transaction using the gRPC transport.
Mirror node REST APIs are read-only for accounts, so this helper delegates to
a user-supplied gRPC handler that signs and submits the transaction.
}
\examples{
grpc_config <- hadeda_config(
  network = "testnet",
  grpc = list(
    create_account = function(config,
                               public_key,
                               initial_balance,
                               alias,
                               key_type,
                               memo,
                               auto_renew_period,
                               key_list,
                               wait_for_record) {
      # Delegate to an SDK client here. This stub illustrates the
      # expected shape of the return value.
      list(
        transaction_id = "0.0.5005-1700000000-000000000",
        status = "OK",
        receipt = list(status = "SUCCESS", accountId = "0.0.5005"),
        accountInfo = list(public_key = public_key)
      )
    }
  ),
  default_transport = "grpc"
)

\dontrun{
  new_account <- crypto_create_account(
    grpc_config,
    public_key = "302a300506032b6570032100...",
    initial_balance = 10,
    memo = "Example account"
  )
  new_account$account_id
}

}
