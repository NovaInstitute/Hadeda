% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/contract_service.R
\name{contract_update}
\alias{contract_update}
\title{Update mutable smart contract properties}
\usage{
contract_update(
  config,
  contract_id,
  admin_key = NULL,
  auto_renew_account = NULL,
  auto_renew_period = NULL,
  expiration_time = NULL,
  memo = NULL,
  staked_account_id = NULL,
  staked_node_id = NULL,
  decline_staking_reward = NULL,
  max_token_associations = NULL,
  max_fee = NULL,
  wait_for_record = FALSE,
  .transport = NULL
)
}
\arguments{
\item{config}{Configuration created by \code{\link[=hadeda_config]{hadeda_config()}}.}

\item{contract_id}{Target contract identifier.}

\item{admin_key}{Optional admin key definition accepted by the gRPC handler.}

\item{auto_renew_account}{Optional auto-renew account identifier.}

\item{auto_renew_period}{Optional auto-renew period expressed in seconds.}

\item{expiration_time}{Optional expiration timestamp expressed as POSIXct, a
numeric epoch second value, or a string timestamp.}

\item{memo}{Optional contract memo.}

\item{staked_account_id}{Optional staking account identifier.}

\item{staked_node_id}{Optional staking node identifier.}

\item{decline_staking_reward}{Optional logical controlling whether staking
rewards should be declined.}

\item{max_token_associations}{Optional ceiling for automatic token
associations.}

\item{max_fee}{Optional fee ceiling expressed in tinybars.}

\item{wait_for_record}{Logical toggling whether the handler should await a
transaction record acknowledgement.}

\item{.transport}{Optional transport override. Only the gRPC transport is
supported.}
}
\value{
A tibble summarising the transaction metadata.
}
\description{
Submit a SmartContractService \code{updateContract} transaction via the configured
gRPC transport. At least one mutable attribute must be supplied. The helper
normalises the acknowledgement into a tidy tibble and preserves the raw
response for inspection.
}
