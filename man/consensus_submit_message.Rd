% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/consensus_submit_message.R
\name{consensus_submit_message}
\alias{consensus_submit_message}
\title{Submit a message via the Consensus Service}
\usage{
consensus_submit_message(
  config,
  topic_id,
  message,
  message_type = c("text", "raw", "base64"),
  memo = NULL,
  chunk_size = 6144L,
  wait_for_receipt = TRUE,
  .transport = NULL
)
}
\arguments{
\item{config}{A configuration list from \code{\link[=hadeda_config]{hadeda_config()}}.}

\item{topic_id}{Consensus topic identifier.}

\item{message}{Message payload to submit. When \code{message_type} is "text"
the value will be UTF-8 encoded before transmission.}

\item{message_type}{Indicates the input format for \code{message}. Accepted
values are "text", "raw", or "base64".}

\item{memo}{Optional message memo.}

\item{chunk_size}{Maximum message payload per chunk in bytes. Defaults to
6,144 bytes to mirror Hedera consensus limits.}

\item{wait_for_receipt}{When \code{TRUE}, the helper expects the transport layer
to resolve a transaction receipt acknowledging submission.}

\item{.transport}{Optional transport override.}
}
\value{
A tibble summarising acknowledgement details for each submitted
chunk. The tibble includes the chunk number, transaction identifier,
precheck status, receipt status, consensus timestamp, and the raw transport
response.
}
\description{
Publish a message to a Hedera consensus topic using the gRPC transport.
}
