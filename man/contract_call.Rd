% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/contract_call.R
\name{contract_call}
\alias{contract_call}
\title{Execute a Hedera smart contract call}
\usage{
contract_call(
  config,
  contract_id,
  function_signature = NULL,
  parameters = list(),
  call_data = NULL,
  gas = NULL,
  sender_account_id = NULL,
  payable_amount = NULL,
  max_fee = NULL,
  wait_for_record = FALSE,
  .transport = NULL
)
}
\arguments{
\item{config}{Configuration created by \code{\link[=hadeda_config]{hadeda_config()}}.}

\item{contract_id}{Target contract identifier.}

\item{function_signature}{Canonical function signature used when encoding
parameters (for example \code{"transfer(address,uint256)"}).}

\item{parameters}{Optional list or atomic vector of parameters supplied when
\code{function_signature} is provided.}

\item{call_data}{Optional hexadecimal string containing pre-encoded call
data. When supplied \code{function_signature} and \code{parameters} are ignored.}

\item{gas}{Optional gas limit forwarded to the gRPC handler.}

\item{sender_account_id}{Optional account submitting the transaction.}

\item{payable_amount}{Optional hbar amount forwarded as the transaction
payment (expressed in tinybars).}

\item{max_fee}{Optional fee ceiling expressed in tinybars.}

\item{wait_for_record}{Logical indicating whether the gRPC handler should
wait for a transaction record in addition to the receipt acknowledgement.}

\item{.transport}{Optional transport override. Only the gRPC transport is
supported.}
}
\value{
A tibble summarising the transaction metadata and call result.
}
\description{
Submit a SmartContractService \code{contractCallMethod} transaction via the gRPC
transport. The helper normalises call data, supports optional ABI encoding of
function parameters, and returns a tidy acknowledgement tibble.
}
\details{
When automatic ABI encoding is requested Hadeda computes the
function selector using Keccak-256. If the hashing backend does not support
Keccak-256 the function aborts with guidance to provide pre-encoded
\code{call_data}.
}
