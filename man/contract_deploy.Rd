% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/contract_deploy.R
\name{contract_deploy}
\alias{contract_deploy}
\title{Deploy a smart contract via gRPC}
\usage{
contract_deploy(
  config,
  bytecode = NULL,
  bytecode_file_id = NULL,
  constructor_signature = NULL,
  constructor_args = list(),
  gas = NULL,
  initial_balance = NULL,
  admin_key = NULL,
  auto_renew_account = NULL,
  auto_renew_period = NULL,
  memo = NULL,
  max_fee = NULL,
  wait_for_record = FALSE,
  .transport = NULL
)
}
\arguments{
\item{config}{Configuration created by \code{\link[=hadeda_config]{hadeda_config()}}.}

\item{bytecode}{Contract bytecode supplied as a hexadecimal string or raw
vector. Provide either \code{bytecode} or \code{bytecode_file_id}.}

\item{bytecode_file_id}{Optional file identifier referencing uploaded
bytecode on the Hedera network.}

\item{constructor_signature}{Optional constructor parameter signature used
when encoding \code{constructor_args}.}

\item{constructor_args}{Optional constructor arguments paired with
\code{constructor_signature}.}

\item{gas}{Optional gas limit forwarded to the gRPC handler.}

\item{initial_balance}{Optional initial balance to send to the contract in
tinybars.}

\item{admin_key}{Optional admin key definition accepted by the gRPC handler.}

\item{auto_renew_account}{Optional auto-renew account identifier.}

\item{auto_renew_period}{Optional auto-renew period expressed in seconds.}

\item{memo}{Optional transaction memo.}

\item{max_fee}{Optional fee ceiling expressed in tinybars.}

\item{wait_for_record}{Logical indicating whether the gRPC handler should
wait for a transaction record acknowledgement.}

\item{.transport}{Optional transport override. Only the gRPC transport is
supported.}
}
\value{
A tibble summarising the deployment transaction metadata.
}
\description{
Submit a SmartContractService \code{createContract} transaction using the gRPC
transport. Callers can supply raw bytecode or a bytecode file identifier and
optionally encode constructor parameters using
\code{\link[=contract_encode_parameters]{contract_encode_parameters()}}.
}
