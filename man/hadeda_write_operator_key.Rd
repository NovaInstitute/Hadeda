% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/operator_keys.R
\name{hadeda_write_operator_key}
\alias{hadeda_write_operator_key}
\title{Persist an operator key to disk and configure Hadeda}
\usage{
hadeda_write_operator_key(
  private_key,
  path = hadeda_operator_key_path(),
  overwrite = FALSE,
  set_env = TRUE,
  passphrase = NULL
)
}
\arguments{
\item{private_key}{Either PEM text or DER bytes encoded as a hexadecimal
string.}

\item{path}{Destination path for the key. Defaults to
\code{\link[=hadeda_operator_key_path]{hadeda_operator_key_path()}}.}

\item{overwrite}{Logical indicating whether an existing file may be replaced.}

\item{set_env}{Logical indicating whether to set \code{HADEDA_OPERATOR_KEY} to the
written file path.}

\item{passphrase}{Optional passphrase used to encrypt the PEM file on disk.}
}
\value{
The path to the written PEM file (invisibly).
}
\description{
This helper accepts a PEM string or DER hex representation of an Ed25519
operator key, writes it to the Hadeda configuration directory, and optionally
updates \code{HADEDA_OPERATOR_KEY} so that gRPC helpers can locate it. Existing
files are preserved unless \code{overwrite = TRUE}.
}
\examples{
\dontrun{
hadeda_write_operator_key(
  "302e020100300506032b657004220420e638e087c0dfe201b3519bd442033eba27b961a5fc969a7f4911b13ea2315769"
)
}

}
