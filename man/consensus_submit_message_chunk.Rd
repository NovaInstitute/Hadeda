% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/consensus_submit_message.R
\name{consensus_submit_message_chunk}
\alias{consensus_submit_message_chunk}
\title{Submit an individual consensus message chunk}
\usage{
consensus_submit_message_chunk(
  config,
  topic_id,
  message,
  chunk_number,
  total_chunks,
  initial_transaction_id,
  message_type = c("text", "raw", "base64"),
  memo = NULL,
  wait_for_receipt = TRUE,
  .transport = NULL
)
}
\arguments{
\item{config}{A configuration list from \code{\link[=hadeda_config]{hadeda_config()}}.}

\item{topic_id}{Consensus topic identifier.}

\item{message}{Message payload to submit. When \code{message_type} is "text"
the value will be UTF-8 encoded before transmission.}

\item{chunk_number}{The position of this chunk within the overall message.}

\item{total_chunks}{Total number of chunks composing the full message.}

\item{initial_transaction_id}{Identifier returned by Hedera for the initial
chunk. Required when \code{total_chunks} exceeds one.}

\item{message_type}{Indicates the input format for \code{message}. Accepted
values are "text", "raw", or "base64".}

\item{memo}{Optional message memo.}

\item{wait_for_receipt}{When \code{TRUE}, the helper expects the transport layer
to resolve a transaction receipt acknowledging submission.}

\item{.transport}{Optional transport override.}
}
\value{
A tibble summarising acknowledgement details for the submitted
chunk, mirroring the structure returned by \code{consensus_submit_message()}.
}
\description{
Publish a pre-chunked payload segment to a Hedera consensus topic using the
gRPC \code{submitMessageChunk} RPC. Callers provide the chunk sequencing metadata
alongside the message payload, allowing advanced workflows to orchestrate
chunking outside of \code{consensus_submit_message()}.
}
